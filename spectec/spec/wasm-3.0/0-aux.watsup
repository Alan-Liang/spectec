;;
;; General definitions
;;

;; General variables

var i : nat
var j : nat
var k : nat

syntax N hint(macro none) = nat  ;; hack
syntax M hint(macro none) = nat  ;; hack
syntax K hint(macro none) = nat  ;; hack
syntax n hint(macro none) = nat  ;; hack
syntax m hint(macro none) = nat  ;; hack

var ii : int hint(show i)  ;; hack


;; General constants

def $Ki : nat hint(macro none)
def $Ki = 1024


;; General functions

def $min(nat, nat) : nat
def $min(0, j) = 0
def $min(i, 0) = 0
def $min($(i+1), $(j+1)) = $min(i, j)

def $sum(nat*) : nat  hint(show (+) %) hint(macro none)
def $sum(eps) = 0
def $sum(n n'*) = $(n + $sum(n'*))


;; General sequence functions

def $concat_(syntax X, (X*)*) : X*  hint(show (++) %2)
def $concat_(syntax X, eps) = eps
def $concat_(syntax X, (w*) (w'*)*) = w* $concat_(X, (w'*)*)

def $concatn(syntax X, (X*)*, nat) : X*  hint(show (++) %2)
def $concatn(syntax X, eps, n) = eps
def $concatn(syntax X, (w*) (w'*)*, n) = w* $concatn(X, (w'*)*, n)

def $disjoint_(syntax X, X*) : bool  hint(show %2 $disjoint) hint(macro none)
def $disjoint_(syntax X, eps) = true
def $disjoint_(syntax X, w w'*) = ~(w <- w'*) /\ $disjoint_(X, w'*)
